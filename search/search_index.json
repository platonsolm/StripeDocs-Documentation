{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Home</p> Payment Links Sell online without building a digital storefront. <p>Accept a payment or sell subscriptions without building additional standalone websites or applications with Payment Links. Share the link as many times as you want on social media, in emails, or on your website.</p> <p>Payment Links supports 20+ payment methods \u2014 including credit and debit cards, Apple Pay, and Google Pay. The Payment Link automatically matches your customer\u2019s preferred browser language for 30+ languages. If you don\u2019t have a Stripe account, sign up now.</p> Get Started Create a payment link <p>Create a payment link without using code.</p> Share a payment link <p>Share a payment link with your customers.</p> Track a payment link <p>Track a payment link and related campaigns.</p> Create an embeddable buy button <p>Create an embeddable buy button to sell a product, subscription, or accept a payment on your website.</p> Explore advanced options Create and manage a payment link with the API <p>Create and manage a payment link with the API.</p> Customize your checkout experience <p>Choose the information you collect from customers at checkout.</p>"},{"location":"payments/create-a-payment-link/","title":"Create a payment link","text":"<p>Home / Create a payment link</p>"},{"location":"payments/create-a-payment-link/#create-a-payment-link","title":"Create a payment link","text":""},{"location":"payments/create-a-payment-link/#create-a-custom-payment-page-without-code","title":"Create a custom payment page without code.","text":"<p>Use the Stripe Dashboard to create a payment link that you can share with your customers. Stripe redirects customers who open this link to a Stripe-hosted payment page.</p>"},{"location":"payments/create-a-payment-link/#get-started","title":"Get started","text":"<p>Before you begin, decide what pricing model works best for you: - Products or subscriptions: Best for e-commerce or SaaS where you\u2019re selling products for a fixed price. - Customers choose what to pay: Best for donations, tipping, or pay-what-you-want. This pricing model currently doesn\u2019t support recurring payments or recurring donations. Learn more about the requirements for accepting tips or donations.</p>"},{"location":"payments/create-a-payment-link/#products-or-subscriptions","title":"Products or subscriptions","text":"<p>If you want to create product or subscription, create a payment link by completing the following steps: 1. In the Dashboard, open the Payment Links page and click +New (or click the plus sign (+) and select Payment link). 2. Select an existing product or click +Add a new product. 3. If you\u2019re adding a new product, fill out the product details and click Add product. 4. Click Create link.</p>"},{"location":"payments/create-a-payment-link/#customers-choose-what-to-pay","title":"Customers choose what to pay","text":"<p>To let your customers choose what to pay, create a payment link by completing the following steps: 1. In the Dashboard, open the Payment Links page and click New (or click the plus sign (+) and select Payment link). 2. Fill out the payment details. 3. (Optional) Set a preset amount. 4. (Optional) Set minimum and maximum payment amounts. By default, the maximum payment amount is 30,000.00 AED. Contact support to increase this limit. 5. Click Create link.</p>"},{"location":"payments/create-a-payment-link/#payment-links-on-mobile","title":"Payment Links on mobile","text":"<p>If you\u2019re creating a product or subscription, use the Stripe Dashboard iOS app to create a payment link on your mobile device. In the app, go to Payments &gt; Payment Links to create a payment link (or click the create icon (+) and select Payment link). The iOS app doesn\u2019t currently support creating links where your customers choose how much to pay.</p>"},{"location":"payments/create-a-payment-link/#configure-payment-methods","title":"Configure payment methods","text":"<p>With Dynamic payment methods, Stripe displays the most relevant and compatible payment methods to your customers, including Apple Pay and Google Pay. Stripe enables certain payment methods for you by default. We might also enable additional payment methods after notifying you. Use the Dashboard to enable or disable payment methods at any time. Learn more about supported payment methods and different types of payment methods.</p> <p>You can review what payment methods your customers see in the Dashboard by entering a transaction ID or setting an order amount and currency.</p>"},{"location":"payments/create-an-embeddable-buy-button/","title":"Create an embeddable buy button","text":"<p>Home / Create an embeddable buy button</p>"},{"location":"payments/create-an-embeddable-buy-button/#create-an-embeddable-buy-button","title":"Create an embeddable buy button","text":""},{"location":"payments/create-an-embeddable-buy-button/#use-payment-links-to-create-an-embeddable-buy-button-for-your-website","title":"Use Payment Links to create an embeddable buy button for your website.","text":"<p>Create an embeddable buy button to sell a product, subscription, or accept a payment on your website. Start by selecting an existing link from the Payment Links list view or by creating a new link where you can decide which products to sell and customize the checkout UI. After you create your link, click Buy button to configure the buy button design and generate the code that you can copy and paste into your website.</p>"},{"location":"payments/create-an-embeddable-buy-button/#customize-the-button","title":"Customize the button","text":"<p>By default, your buy button uses the same branding and call to action configured for your payment link. You can:</p> <ul> <li>Choose between a simple button and a card widget.</li> <li>Set brand colors, shapes, and fonts to match your website.</li> <li>Set the language of the button and payment page to match your website\u2019s language.</li> <li>Customize your button\u2019s call to action.</li> </ul> <p></p> <p>Customize the buy button</p>"},{"location":"payments/create-an-embeddable-buy-button/#embed-the-button","title":"Embed the button","text":"<p>Stripe provides an embed code composed of a <code>&lt;script&gt;</code> tag and a <code>&lt;stripe-buy-button&gt;</code> web component. Click Copy code to copy the code and paste it into your website.</p> <p>If you\u2019re using HTML, paste the embed code into the HTML. If you\u2019re using React, include the script tag in your <code>index.html</code> page to mount the <code>&lt;stripe-buy-button&gt;</code> component.</p> <p>Warning</p> <p>The buy button uses your account\u2019s publishable API key. If you revoke the API key, you need to update the embed code with your new publishable API key.</p> index.html<pre><code>&lt;body&gt;\n  &lt;h1&gt;Purchase your new kit&lt;/h1&gt;\n  &lt;!-- Paste your embed code script here. --&gt;\n  &lt;script\n    async\n    src=\"https://js.stripe.com/v3/buy-button.js\"&gt;\n  &lt;/script&gt;\n  &lt;stripe-buy-button\n    buy-button-id=\"{{BUY_BUTTON_ID}}\"\n    publishable-key=\"pk_test_51EnkCZCLU6thghKmNHiHQ73IHaigYIluWMELqWVMln10heSz4xpma7dJwmAuMBhYAVTQ76PrC6M0LvmsUxhNzKC500RL4elxGV\"\n  &gt;\n  &lt;/stripe-buy-button&gt;\n&lt;/body&gt;\n</code></pre>"},{"location":"payments/create-an-embeddable-buy-button/#attributes-to-customize-checkout","title":"Attributes to customize checkout","text":"PARAMETER DESCRIPTION SYNTAX <code>client-reference-id</code> Use <code>client-reference-id</code> to attach a unique string of your choice to the Checkout Session. The string can be a customer ID or a cart ID (or similar) that you use to reconcile the Session with your internal systems. If you pass this parameter to your <code>&lt;stripe-buy-button&gt;</code>, it\u2019s sent in the checkout.session.completed webhook upon payment completion. <code>client-reference-id</code> can be composed of alphanumeric characters, dashes, or underscores, and be any value up to 200 characters. Invalid values are silently dropped, but your payment page continues to work as expected. <p>Attribute <code>customer-email</code></p>"},{"location":"payments/create-an-embeddable-buy-button/#description","title":"Description","text":"<p>Use <code>customer-email</code> to prefill the email address on the payment page. When the property is set, the buy button passes it to the Checkout Session\u2019s <code>customer_email</code> attribute. The customer can\u2019t edit the email address on the payment page.</p>"},{"location":"payments/create-an-embeddable-buy-button/#syntax","title":"Syntax","text":"<p><code>customer-email</code> must be a valid email. Invalid values are silently dropped, but your payment pages continues to work as expected.</p> <ul> <li><code>customer-session-client-secret</code></li> <li>You can provide an existing Customer object to Checkout Sessions created from the buy button. Create a customer session for a user you\u2019ve already authenticated server-side, and return the <code>client_secret</code> to the client. Set the <code>customer-session-client-secret</code> attribute on the <code>&lt;stripe-buy-button&gt;</code> web component to be the <code>client_secret</code> from the Customer Session.</li> <li>The <code>customer-session-client-secret</code> value must be generated from the <code>client_secret</code>.</li> </ul>"},{"location":"payments/create-an-embeddable-buy-button/#pass-an-existing-customer","title":"Pass an existing customer","text":"<p>You can provide an existing Customer object to Checkout Sessions created from the buy button. Create a customer session for a user you\u2019ve already authenticated server-side, and return the <code>client_secret</code> to the client.</p> <p>server.py<pre><code># Set your secret key. Remember to switch to your live secret key in production.\n# See your keys here: https://dashboard.stripe.com/apikeys\nimport stripe\nstripe.api_key = \"sk_test_MMNDWMvpQe1ES6MzEzMDGu5a00gaF0XBFa\"\n\n\nstripe.CustomerSession.create(\n    customer='{{CUSTOMER_ID}}',\n    components={\"buy_button\": {\"enabled\": True}},\n)\n</code></pre> Set the <code>customer-session-client-secret</code> attribute on the <code>&lt;stripe-buy-button&gt;</code> web component to the <code>client_secret</code> from the Customer Session.</p> <p>Note</p> <p>You must provide the <code>client_secret</code> within 30 minutes. After providing the client secret, you have an additional 30 minutes until the customer session expires. Any resulting Checkout Sessions created from the buy button will fail. Don\u2019t cache the client secret, instead generate a new one every time you render each buy button.</p> index.html<pre><code>&lt;body&gt;\n  &lt;script\n    async\n    src=\"https://js.stripe.com/v3/buy-button.js\"&gt;\n  &lt;/script&gt;\n  &lt;stripe-buy-button\n    buy-button-id='{{BUY_BUTTON_ID}}'\n\n    publishable-key=\"pk_test_51EnkCZCLU6thghKmNHiHQ73IHaigYIluWMELqWVMln10heSz4xpma7dJwmAuMBhYAVTQ76PrC6M0LvmsUxhNzKC500RL4elxGV\"\n\n    customer-session-client-secret=\"{{CLIENT_SECRET}}\"\n  &gt;\n  &lt;/stripe-buy-button&gt;\n&lt;/body&gt;\n</code></pre>"},{"location":"payments/create-an-embeddable-buy-button/#content-security-policy","title":"Content Security Policy","text":"<p>If you\u2019ve deployed a Content Security Policy, the policy directives that the buy button requires are:</p> <ul> <li>frame-src, https://js.stripe.com</li> <li>script-src, https://js.stripe.com</li> </ul>"},{"location":"payments/create-an-embeddable-buy-button/#limitations","title":"Limitations","text":"<p>Rendering the buy button requires a website domain. To test the buy button locally, run a local HTTP server to host your website\u2019s <code>index.html</code> file over the localhost domain. To run a local HTTP server, use Python\u2019s SimpleHTTPServer or the http-server npm module.</p>"},{"location":"payments/create-an-embeddable-buy-button/#track-payments","title":"Track payments","text":"<p>After your customer makes a payment using a payment link, you can see it in the payments overview in the Dashboard.</p> <p>If you\u2019re new to Stripe, you\u2019ll receive an email after your first payment. To receive emails for all successful payments, update your notification preferences in your profile settings.</p> <p>Stripe creates a new guest customer for one-time payments and a new Customer when selling a subscription or saving a payment method for future use.</p> <p>Learn more about handling payment links post-payment, like how to configure post-payment behavior for a buy button or payment link.</p>"},{"location":"payments/share-a-payment-link/","title":"Share a payment link","text":"<p>Home / Share a payment link</p>"},{"location":"payments/share-a-payment-link/#share-a-payment-link","title":"Share a payment link","text":""},{"location":"payments/share-a-payment-link/#share-payment-links-across-social-media-emails-or-your-website","title":"Share payment links across social media, emails, or your website.","text":"<p>After you create a payment link, share it with your customers to accept payments without a digital storefront.</p>"},{"location":"payments/share-a-payment-link/#share-your-link","title":"Share your link","text":"<p>Use the Dashboard to copy your payment link and share it online. Click the copy icon next to an existing link on the Payment Links page, or go to the payment link\u2019s details page. You can share your payment link multiple times and anywhere online, including emails, text messages, and social media platforms.</p>"},{"location":"payments/share-a-payment-link/#generate-a-qr-code","title":"Generate a QR code","text":"<p>You can create a QR code for a payment link in the Dashboard. Choose an existing link from the Payment Links page, or create a new link and then click QR code. Copy or download a PNG image of the QR code.</p> <p>The QR code doesn\u2019t expire. If you deactivate the underlying payment link, the QR code redirects to an expiration page.</p>"},{"location":"payments/share-a-payment-link/#embed-a-button-on-your-site","title":"Embed a button on your site","text":"<p>Turn your payment link into an embeddable buy button to sell a product or subscription from your website. Select an existing link from the Payment Links page or create a new link and then click Buy button. Copy the code and paste it into your website. To learn more on how to embed and customize a button, see Create a buy button.</p>"},{"location":"payments/share-a-payment-link/#deactivate-a-link","title":"Deactivate a link","text":"<p>You can use the Dashboard to deactivate a payment link. Click the overflow menu (\u2022\u2022\u2022) to the right of the desired payment link, and then Deactivate. After you deactivate a link, customers are no longer able to make a purchase using it. You can choose to reactivate the payment link at any time. You can also use the API to deactivate a payment link.</p>"},{"location":"payments/track-a-payment-link/","title":"Track a payment link","text":"<p>Home / Track a payment link</p>"},{"location":"payments/track-a-payment-link/#track-a-payment-link","title":"Track a payment link","text":""},{"location":"payments/track-a-payment-link/#use-url-parameters-and-utm-codes-to-track-a-payment-link","title":"Use URL parameters and UTM codes to track a payment link.","text":"<p>Modify your payment link with URL parameters and Urchin Tracking Module (UTM) codes to get insight into customer behaviors and your marketing strategy\u2019s effectiveness. These tools help identify the source of your traffic and the marketing campaigns leading to the most conversions.</p>"},{"location":"payments/track-a-payment-link/#track-campaigns-with-utm-codes","title":"Track campaigns with UTM codes","text":"<p>Use UTM codes to track how customers find your site when they pay using your payment link. You can add the following UTM codes as parameters in the query string of your URL: <code>utm_source</code>, <code>utm_content</code>, <code>utm_medium</code>, <code>utm_term</code>, and <code>utm_campaign</code>.</p> PARAMETER DESCRIPTION <code>utm_source</code> Identifies where the traffic originated (for example, a website name, social media, or a search engine). <code>utm_content</code> Identifies what content your customer chooses. Use this parameter to distinguish between links that point to the same payment page. <code>utm_medium</code> Identifies the marketing medium that accesses your payment link (for example, email, cost per click (cpc), or other methods). <code>utm_term</code> Identifies specific search terms and keywords in your paid search ads. <code>utm_campaign</code> Identifies your marketing campaigns using the payment link URL. <p>To add UTM codes, specify redirect as your confirmation behavior. When customers complete a payment, your redirect URL contains the UTM code parameters specified in your payment link URL. Here\u2019s what a payment link looks like with an appended UTM codes: <code>https://buy.stripe.com/test_eVa5nPg1j1wmfXq5kr?utm_medium=earned_email&amp;utm_source=marketo&amp;utm_campaign=campaign_a</code></p> <p>Warning</p> <p>Construct UTM codes using alphanumeric characters, dashes, or underscores, ensuring they don\u2019t exceed a 150-character limit. Invalid values are discreetly discarded, guaranteeing your payment links performance remains unaffected.</p>"},{"location":"payments/track-a-payment-link/#simplify-reconciliation-with-a-url-parameter","title":"Simplify reconciliation with a URL parameter","text":"<p>You can simplify reconciliation with the <code>client_reference_id</code> URL parameter. Use URL parameters in the query string of your payment link URL. To configure URL parameters directly in the Dashboard Payment Links page:</p> <ol> <li>Click the payment link you want to modify.</li> <li>Click the down arrow of the Copy button and select URL parameters.</li> <li>In the dialog, use the drop-down menu to select Client reference ID.</li> <li>Enter a value that meets the requirements described in the following table to append the reference to your URL.</li> <li>Copy the amended URL for use in your integration.</li> </ol> PARAMETER DESCRIPTION SYNTAX <code>client_reference_id</code> Use <code>client_reference_id</code> to attach a unique string of your choice to the Checkout Session. This can be a customer ID or a cart ID (or similar), and you can use it to reconcile the Session with your internal systems. If you add this parameter to your payment link, it\u2019s sent in the checkout.session.completed webhook after payment completion. <code>client_reference_id</code> can be composed of alphanumeric characters, dashes, or underscores, and be any value up to 200 characters. Invalid values are silently dropped, but your payment page continues to work as expected."}]}